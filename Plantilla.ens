;Plantilla de prueba

.model small

. stack 64

stack segment

.stack segment

 db   256  dup(0)

 db   100  doble (‘a’)

 dw   256  dup(0)

ends



;data

data segment

.data segment

;Variables

Soymuylarga db 0

 	cad1 db “programa de $...  prueba “

    	var1 db hola'

cad2 db “programa de $...  prueba

var2 dw 0

tecla db 5

Vtecla bd 0fh

7tecla Wd 0

7tecla dw 0

Teclamuylarga db 0

cons1 equ 45

con2 equa 345

con2 equ 345

simbolo db 045H

tecla dw 045H

simbin db 001111101b

sb db 11110000b

sb2 dw 11110000110011001b

edad db 15

var2 db 0

mayor db 'ERES MAYOR DE EDAD...','$'

menor db 'ERES MENOR DE EDAD...','$'

ends



code segment

. code

.code segment

begin proc far

mov ax,@data

mov ds,ax

b20:

mov es,ax

cmp edad,18

jae b20

mov ah,09h ;peticion para desplegar

lea dx,menor ;carga la direccion de la indicacion

b21:

int 021h ;llama al dos

jmp b21 ;salta a la etiqueta b21 para salir



mov ah,009h ;peticion para desplegar

lea dx,mayor ;carga la direccion de la indicacion

int 21h ;llama al dos

mov ax,04c00h

int 21h

begin endp





code

mov ah, 1 ;Leer un caracter de la entrada estandar

int 21h ;Llamada al sistema operativo (DOS)

mov tecla, al

mov ah, 2 ;imprime un simbolo a la consola

mov dl, simbolo ;el caracter a mostrar, en este caso la E

int 21h ;Llamada al DOS



inc tecla

mov ah, 7 ;NO imprime un simbolo a la consola

mov dl, tecla ;

int 21h ;Llamada al DOS

ret

;ah = 1 guarda caracter en al

;ah = 2 escribe un caracter en la consola. El ascii del cacacter a imprimir se pone el dl

;AH = 7 es igual a el ah=2 pero el resultado no se ve en pantalla

;ah = 9 imprime una cadena en la consola. Considera el caracter $ como fin de cadena.

;La direccion de la cadena se expresa en

mov msg[2], 34H

mov dx, offset msg

mov ah, 9

int 21h

ret

msg db "hello world $"

lectura:

 mov ah,7

 int 21h

 mov tecla, al

 cmp al,13

 jz fin:

cmp tecla, 122 ;si tecla es mayor a 122 entonces ir a fin3 (tecla > 122)

ja fin3

cmp tecla,96 ;si tecla no es mayor a 96 ir a fin3 (tecla <= 96)

jng fin3

sub tecla, 32 ;si es 'a' hasta 'z' entonces restarle 32

fin3:

mov ah,2

add ax, var1

mov dl,tecla

int 21h

jmp lectura

fin:



;AQUÍ DEBES AGREGAR TUS INSTRUCCIONES CON ERROR Y SIN ERROR PARA REVISAR

ends
